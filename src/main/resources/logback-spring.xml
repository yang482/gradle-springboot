<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds"> 
    
    <!--springProfile 태그를 사용하면 logback 설정파일에서 복수개의 프로파일을 설정할 수 있다. -->
    <springProfile name="local">
        <property resource="logback-local.properties" />
    </springProfile>
    
    <!--Environment 내의 프로퍼티들을 개별적으로 설정할 수도 있다. -->
    
    <!-- err log file name -->
    <property name="ERR_LOG_FILE_NAME" value="err_log" />
    <!-- pattern -->
    <property name="LOG_PATTERN" value="%-5level %d{yy-MM-dd HH:mm:ss} [%thread] [%C:%line] - %msg%n" /> 
    
    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender> 
    
    <springProfile name="dev,prod">
        
        <!-- log file path -->
        <property name="LOG_PATH" value="${log.config.path}" /> 
        <!-- log file name -->
        <property name="LOG_FILE_NAME" value="${log.config.filename}" />
        
        <!-- File Appender -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 파일경로 설정 -->
            <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file> 
            <!-- 출력패턴 설정 -->
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${LOG_PATTERN}</pattern>
            </encoder> 
            <!-- Rolling 정책 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
            
                <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
                <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <!-- 파일당 최고 용량 kb, mb, gb -->
                    <maxFileSize>10MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                
                <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
                <maxHistory>30</maxHistory> <!--<MinIndex>1</MinIndex> <MaxIndex>10</MaxIndex> -->
            </rollingPolicy>
        </appender> 
        
        <!-- 에러의 경우 파일에 로그 처리 -->
        <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>error</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${LOG_PATTERN}</pattern>
            </encoder> 
            
            <!-- Rolling 정책 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
                
                <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
                <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    
                    <!-- 파일당 최고 용량 kb, mb, gb -->
                    <maxFileSize>10MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                
                <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 -->
                <maxHistory>60</maxHistory>
            </rollingPolicy>
        </appender>

    </springProfile>
    
    <!-- default, local 설정 -->
    <springProfile name="default,local">
        <logger name="jdbc" level="OFF">
            <appender-ref ref="CONSOLE" />
        </logger> 
        <logger name="jdbc.sqlonly" level="OFF">
            <appender-ref ref="CONSOLE" />
        </logger>  
        <logger name="jdbc.sqltiming" level="info">
            <appender-ref ref="CONSOLE" />
        </logger>  
        <logger name="jdbc.resultsettable" level="info">
            <appender-ref ref="CONSOLE" />
        </logger>  
        <logger name="jdbc.audit" level="OFF">
            <appender-ref ref="CONSOLE" />
        </logger>  
        <logger name="jdbc.resultset" level="OFF">
            <appender-ref ref="CONSOLE" />
        </logger>  
        <logger name="jdbc.connection" level="OFF">
            <appender-ref ref="CONSOLE" />
        </logger> 
    
        <logger name="com.zaxxer" level="WARN" additivity="false">
            <appender-ref ref="CONSOLE" />
        </logger>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
        </root>
    </springProfile>
     
</configuration>
